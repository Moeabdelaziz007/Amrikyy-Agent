#!/bin/bash
# Pre-commit hook to prevent committing secrets
# Install: git config core.hooksPath .githooks

echo "🔒 Running security checks..."

# Colors
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Flag to track if secrets found
SECRETS_FOUND=0

# Check for .env files (except examples)
echo "📁 Checking for .env files..."
ENV_FILES=$(git diff --cached --name-only | grep -E "\.env$|\.env\." | grep -v "example\|template")
if [ ! -z "$ENV_FILES" ]; then
    echo -e "${RED}❌ ERROR: Attempting to commit .env files:${NC}"
    echo "$ENV_FILES"
    echo -e "${YELLOW}💡 These files should be in .gitignore${NC}"
    SECRETS_FOUND=1
fi

# Check for API keys and secrets in staged files
echo "🔑 Scanning for API keys and secrets..."

# Get all staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

# Patterns to detect secrets
PATTERNS=(
    "AIzaSy[A-Za-z0-9_-]{33}"                    # Google/Gemini API keys
    "sk_test_[A-Za-z0-9]{24,}"                   # Stripe test keys
    "sk_live_[A-Za-z0-9]{24,}"                   # Stripe live keys
    "pk_test_[A-Za-z0-9]{24,}"                   # Stripe publishable test
    "pk_live_[A-Za-z0-9]{24,}"                   # Stripe publishable live
    "whsec_[A-Za-z0-9]{32,}"                     # Stripe webhook secrets
    "[0-9]{10}:[A-Za-z0-9_-]{35}"                # Telegram bot tokens
    "AKIA[0-9A-Z]{16}"                           # AWS access keys
    "ghp_[A-Za-z0-9]{36}"                        # GitHub personal access tokens
    "gho_[A-Za-z0-9]{36}"                        # GitHub OAuth tokens
    "postgres://[^@]+:[^@]+@"                    # PostgreSQL connection strings
    "mongodb://[^@]+:[^@]+@"                     # MongoDB connection strings
    "redis://[^@]+:[^@]+@"                       # Redis connection strings
    "password[\"']?\s*[:=]\s*[\"'][^\"']{8,}"   # Password assignments
    "secret[\"']?\s*[:=]\s*[\"'][^\"']{8,}"     # Secret assignments
)

for file in $STAGED_FILES; do
    # Skip binary files and node_modules
    if [[ "$file" == *"node_modules"* ]] || [[ "$file" == *".lock" ]] || [[ "$file" == *".png" ]] || [[ "$file" == *".jpg" ]] || [[ "$file" == *".jpeg" ]] || [[ "$file" == *".gif" ]]; then
        continue
    fi
    
    # Check each pattern
    for pattern in "${PATTERNS[@]}"; do
        MATCHES=$(git diff --cached "$file" | grep -E "$pattern" | grep "^\+" | grep -v "^\+\+\+")
        if [ ! -z "$MATCHES" ]; then
            echo -e "${RED}❌ Potential secret found in: $file${NC}"
            echo -e "${YELLOW}Pattern matched: $pattern${NC}"
            echo "$MATCHES"
            SECRETS_FOUND=1
        fi
    done
done

# Check for common secret variable names (skip .env.example files)
echo "🔍 Checking for secret variable names..."
SECRET_VARS=$(git diff --cached | grep -E "^\+" | grep -iE "(api_key|apikey|secret|password|token|private_key|access_key)\s*=\s*['\"][^'\"]{10,}" | grep -v "example\|template\|placeholder\|your-\|generate-with-openssl")
if [ ! -z "$SECRET_VARS" ]; then
    echo -e "${RED}❌ Potential hardcoded secrets found:${NC}"
    echo "$SECRET_VARS"
    SECRETS_FOUND=1
fi

# Final result
if [ $SECRETS_FOUND -eq 1 ]; then
    echo ""
    echo -e "${RED}╔════════════════════════════════════════════════════════╗${NC}"
    echo -e "${RED}║  ⚠️  COMMIT BLOCKED - SECRETS DETECTED  ⚠️            ║${NC}"
    echo -e "${RED}╚════════════════════════════════════════════════════════╝${NC}"
    echo ""
    echo -e "${YELLOW}🔒 Security recommendations:${NC}"
    echo "  1. Remove secrets from staged files"
    echo "  2. Add sensitive files to .gitignore"
    echo "  3. Use environment variables instead"
    echo "  4. Never commit .env files (except .env.example)"
    echo ""
    echo -e "${YELLOW}💡 To unstage files:${NC}"
    echo "  git restore --staged <file>"
    echo ""
    echo -e "${YELLOW}🚨 If you've already committed secrets:${NC}"
    echo "  1. Rotate all exposed keys immediately"
    echo "  2. Use git filter-branch to remove from history"
    echo "  3. Force push to remote"
    echo ""
    exit 1
fi

echo -e "${GREEN}✅ No secrets detected - commit allowed${NC}"
exit 0
