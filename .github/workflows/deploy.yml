name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'

jobs:
  # Deploy Backend to Render
  deploy-backend:
    name: Deploy Backend to Render
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
        continue-on-error: true

      - name: Verify Deployment
        run: |
          sleep 30
          curl -f https://${{ secrets.RENDER_SERVICE_URL }}/health || echo "Health check failed"
        continue-on-error: true

  # Deploy Frontend to Vercel
  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel Environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./frontend

      - name: Build Project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./frontend

      - name: Deploy to Vercel
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./frontend

  # Post-Deployment Tests
  post-deployment:
    name: Post-Deployment Verification
    needs: [deploy-backend, deploy-frontend]
    runs-on: ubuntu-latest
    
    steps:
      - name: Health Check - Backend
        run: |
          curl -f https://${{ secrets.RENDER_SERVICE_URL }}/health || exit 1
        continue-on-error: true

      - name: Health Check - Frontend
        run: |
          curl -f https://amrikyy.vercel.app || exit 1
        continue-on-error: true

      - name: Send Success Notification
        if: success()
        run: |
          echo "âœ… Deployment successful!"
          echo "Backend: https://${{ secrets.RENDER_SERVICE_URL }}"
          echo "Frontend: https://amrikyy.vercel.app"
