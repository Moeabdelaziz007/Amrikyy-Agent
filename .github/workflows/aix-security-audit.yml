name: üîê AIX Security Audit

on:
  push:
    branches: [main, pr-7, develop]
    paths:
      - '**/*.aix'
      - '**/*-agent.json'
      - 'aix-auditor/**'
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 9 * * 1'  # Every Monday at 9 AM

jobs:
  security-audit:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        agent-file:
          - amrikyy-agent.aix.json
          - aix-auditor/examples/test-agent-vulnerable.aix
          - aix-auditor/examples/perfect-secure-agent.aix
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
      
      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: aix-auditor/package-lock.json
      
      - name: üì¶ Install dependencies
        run: |
          cd aix-auditor
          npm ci --production
      
      - name: üîç Run security audit
        id: audit
        continue-on-error: true
        run: |
          echo "Auditing: ${{ matrix.agent-file }}"
          node aix-auditor/bin/aix-audit.js "${{ matrix.agent-file }}" --json > security-report-${{ strategy.job-index }}.json
          
          # Extract score
          SCORE=$(jq -r '.score.overall' security-report-${{ strategy.job-index }}.json)
          GRADE=$(jq -r '.score.grade' security-report-${{ strategy.job-index }}.json)
          CRITICAL=$(jq -r '.summary.critical' security-report-${{ strategy.job-index }}.json)
          WARNINGS=$(jq -r '.summary.warnings' security-report-${{ strategy.job-index }}.json)
          
          echo "score=$SCORE" >> $GITHUB_OUTPUT
          echo "grade=$GRADE" >> $GITHUB_OUTPUT
          echo "critical=$CRITICAL" >> $GITHUB_OUTPUT
          echo "warnings=$WARNINGS" >> $GITHUB_OUTPUT
          
          # Print summary
          echo "## üîê Security Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**File:** \`${{ matrix.agent-file }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Score:** $SCORE/100 ($GRADE)" >> $GITHUB_STEP_SUMMARY
          echo "**Critical Issues:** $CRITICAL" >> $GITHUB_STEP_SUMMARY
          echo "**Warnings:** $WARNINGS" >> $GITHUB_STEP_SUMMARY
      
      - name: üö® Check for critical issues
        if: steps.audit.outputs.critical > 0
        run: |
          echo "::error::Found ${{ steps.audit.outputs.critical }} critical security issues in ${{ matrix.agent-file }}"
          echo "Run: node aix-auditor/bin/aix-audit.js ${{ matrix.agent-file }} --fix"
          exit 1
      
      - name: ‚ö†Ô∏è  Check security score
        if: steps.audit.outputs.score < 80 && steps.audit.outputs.critical == 0
        run: |
          echo "::warning::Security score (${{ steps.audit.outputs.score }}/100) is below threshold (80)"
          echo "Consider running: node aix-auditor/bin/aix-audit.js ${{ matrix.agent-file }} --fix"
      
      - name: üì§ Upload security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-report-${{ strategy.job-index }}
          path: security-report-${{ strategy.job-index }}.json
          retention-days: 90
      
      - name: üí¨ Comment on PR
        if: github.event_name == 'pull_request' && steps.audit.outputs.score
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('security-report-${{ strategy.job-index }}.json', 'utf8'));
            
            const scoreEmoji = report.score.overall >= 90 ? '‚úÖ' :
                              report.score.overall >= 70 ? '‚ö†Ô∏è' : '‚ùå';
            
            const body = `## ${scoreEmoji} AIX Security Audit
            
            **File:** \`${{ matrix.agent-file }}\`
            **Score:** ${report.score.overall}/100 (${report.score.grade})
            
            ### Category Breakdown
            - **Security:** ${report.score.breakdown.security}/100
            - **Compliance:** ${report.score.breakdown.compliance}/100
            - **Resilience:** ${report.score.breakdown.resilience}/100
            - **Performance:** ${report.score.breakdown.performance}/100
            - **Best Practices:** ${report.score.breakdown.best_practices}/100
            
            ### Issues
            - üö® **Critical:** ${report.summary.critical}
            - ‚ö†Ô∏è **Warnings:** ${report.summary.warnings}
            - ‚ÑπÔ∏è **Info:** ${report.summary.info}
            - üîß **Auto-fixable:** ${report.summary.auto_fixable}
            
            ${report.summary.auto_fixable > 0 ? 'üí° **Quick fix:** `node aix-auditor/bin/aix-audit.js ${{ matrix.agent-file }} --fix`' : ''}
            
            <details>
            <summary>View detailed report</summary>
            
            \`\`\`json
            ${JSON.stringify(report, null, 2)}
            \`\`\`
            </details>
            `;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
      
      - name: üéâ Success
        if: steps.audit.outputs.score >= 90 && steps.audit.outputs.critical == 0
        run: |
          echo "::notice::üèÜ Excellent security score: ${{ steps.audit.outputs.score }}/100 (${{ steps.audit.outputs.grade }})"
  
  consolidated-report:
    runs-on: ubuntu-latest
    needs: security-audit
    if: always()
    
    steps:
      - name: üì• Download all reports
        uses: actions/download-artifact@v4
        with:
          path: reports
      
      - name: üìä Generate consolidated report
        run: |
          echo "# üîê AIX Security Audit - Consolidated Report" > SECURITY_REPORT.md
          echo "" >> SECURITY_REPORT.md
          echo "**Date:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> SECURITY_REPORT.md
          echo "**Commit:** ${{ github.sha }}" >> SECURITY_REPORT.md
          echo "" >> SECURITY_REPORT.md
          
          for dir in reports/security-report-*; do
            if [ -f "$dir/security-report-*.json" ]; then
              REPORT=$(cat "$dir"/security-report-*.json)
              FILE=$(echo "$REPORT" | jq -r '.file')
              SCORE=$(echo "$REPORT" | jq -r '.score.overall')
              GRADE=$(echo "$REPORT" | jq -r '.score.grade')
              
              echo "## $FILE" >> SECURITY_REPORT.md
              echo "- **Score:** $SCORE/100 ($GRADE)" >> SECURITY_REPORT.md
              echo "" >> SECURITY_REPORT.md
            fi
          done
          
          cat SECURITY_REPORT.md >> $GITHUB_STEP_SUMMARY
      
      - name: üì§ Upload consolidated report
        uses: actions/upload-artifact@v4
        with:
          name: consolidated-security-report
          path: SECURITY_REPORT.md
          retention-days: 90

