name: Issue Management

on:
  issues:
    types: [opened, labeled, unlabeled, edited]
  pull_request:
    types: [opened, labeled, unlabeled]

jobs:
  label-issues:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'

    steps:
    - name: Label issues automatically
      uses: actions/github-script@v7
      with:
        script: |
          const title = context.payload.issue.title.toLowerCase();
          const body = context.payload.issue.body.toLowerCase();

          const labels = [];

          // Bug detection
          if (title.includes('bug') || title.includes('error') || title.includes('fix') ||
              body.includes('not working') || body.includes('broken')) {
            labels.push('bug');
          }

          // Feature request detection
          if (title.includes('feature') || title.includes('add') || title.includes('implement') ||
              body.includes('would like') || body.includes('should have')) {
            labels.push('enhancement');
          }

          // Documentation
          if (title.includes('docs') || title.includes('documentation') ||
              body.includes('readme') || body.includes('guide')) {
            labels.push('documentation');
          }

          // Security
          if (title.includes('security') || title.includes('vulnerability') ||
              body.includes('exploit') || body.includes('hack')) {
            labels.push('security');
          }

          // Performance
          if (title.includes('performance') || title.includes('slow') || title.includes('speed') ||
              body.includes('optimization') || body.includes('loading')) {
            labels.push('performance');
          }

          // Priority detection
          if (body.includes('urgent') || body.includes('critical') || body.includes('asap')) {
            labels.push('priority-high');
          } else if (body.includes('important') || body.includes('should fix')) {
            labels.push('priority-medium');
          }

          // Component detection
          if (body.includes('frontend') || body.includes('ui') || body.includes('react')) {
            labels.push('frontend');
          }
          if (body.includes('backend') || body.includes('api') || body.includes('server')) {
            labels.push('backend');
          }
          if (body.includes('telegram') || body.includes('bot') || body.includes('mini app')) {
            labels.push('telegram');
          }
          if (body.includes('ai') || body.includes('maya') || body.includes('assistant')) {
            labels.push('ai');
          }
          if (body.includes('payment') || body.includes('stripe') || body.includes('billing')) {
            labels.push('payment');
          }

          // Apply labels
          if (labels.length > 0) {
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: labels
            });
          }

  welcome-contributors:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'

    steps:
    - name: Welcome new contributors
      uses: actions/github-script@v7
      with:
        script: |
          const isFirstTime = context.payload.issue.author_association === 'FIRST_TIME_CONTRIBUTOR';

          if (isFirstTime) {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üëã Welcome to Amrikyy Travel Agent!

          Thank you for your first contribution! We're excited to have you here.

          ### üìã What happens next:
          1. **Automatic Labeling**: Our bot will analyze your issue and apply relevant labels
          2. **Review**: A maintainer will review your issue within 24-48 hours
          3. **Discussion**: We'll discuss the best approach to solve this
          4. **Implementation**: Once approved, we'll work on implementing the solution

          ### üÜò Need help?
          - Check our [documentation](README.md)
          - Join our [Telegram community](https://t.me/amrikyy_community)
          - Contact support: support@amrikyy.com

          ### üìù Issue Guidelines:
          - Be specific about the problem or feature request
          - Include steps to reproduce bugs
          - Add screenshots or examples when possible
          - Use appropriate labels if you know them

          Thanks again for helping make Amrikyy better! üåü`
            });
          }

  pr-size-label:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened'

    steps:
    - name: Label PR by size
      uses: codacy/git-version@2.7.1
      with:
        release-branch: main
        dev-branch: develop

    - name: Size label
      uses: codacy/git-version@2.7.1
      with:
        script: |
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });

          const additions = pr.additions;
          const deletions = pr.deletions;
          const totalChanges = additions + deletions;

          let size = 'size-xs';
          if (totalChanges > 1000) size = 'size-xl';
          else if (totalChanges > 500) size = 'size-l';
          else if (totalChanges > 100) size = 'size-m';
          else if (totalChanges > 10) size = 'size-s';

          await github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: [size]
          });

  stale-issues:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' && github.event.schedule == '0 0 * * *'

    steps:
    - name: Close stale issues
      uses: actions/stale@v8
      with:
        days-before-stale: 30
        days-before-close: 7
        stale-issue-message: |
          ## üìÖ Issue Marked as Stale

          This issue has been inactive for 30 days. It will be automatically closed in 7 days if no further activity occurs.

          ### Why was this marked as stale?
          - No recent comments or updates
          - No assigned maintainer
          - May be resolved or no longer relevant

          ### What you can do:
          - Add more details or context
          - Provide reproduction steps
          - Share any workarounds you've found
          - Close the issue if it's resolved

          If this issue is still important to you, please add a comment to keep it open.
        close-issue-message: |
          ## üîí Issue Closed

          This issue has been automatically closed due to inactivity. If you still experience this problem or need this feature, please open a new issue with updated information.

          Thank you for your contribution to Amrikyy! üôè
        stale-issue-label: 'stale'
        exempt-issue-labels: 'priority-high,security,bug'
        operations-per-run: 30

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        config-file: '.github/dependency-review-config.yml'

  security-events:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'security')

    steps:
    - name: Security issue notification
      run: |
        echo "üö® Security issue detected!"
        echo "Issue: ${{ github.event.issue.html_url }}"
        echo "Title: ${{ github.event.issue.title }}"
        # Add security team notification logic here
        # Could send to Slack, email, or create incident ticket