{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://aix-spec.org/v1.0/schema.json",
  "title": "AIX Agent Specification v1.0",
  "description": "Comprehensive specification for AI agent definition and deployment",
  "type": "object",
  "required": ["aix_version", "agent_id", "persona", "instructions", "memory_access_policy"],
  "properties": {
    "aix_version": {
      "type": "string",
      "pattern": "^1\\.0$",
      "description": "Version of AIX specification used",
      "examples": ["1.0"]
    },
    "agent_id": {
      "type": "string",
      "pattern": "^[a-z0-9-]+-v[0-9]+\\.[0-9]+$",
      "description": "Unique identifier for the agent",
      "examples": ["karim-budget-optimizer-v1.2", "layla-cultural-guide-v1.0"]
    },
    "persona": {
      "type": "object",
      "required": ["role", "tone", "specialization", "personality"],
      "properties": {
        "role": {
          "type": "string",
          "description": "Primary role of the agent",
          "examples": ["Budget Analyst", "Cultural Guide", "Travel Coordinator"]
        },
        "tone": {
          "type": "string",
          "description": "Communication style and tone",
          "examples": [
            "Analytical and concise",
            "Empathetic and storytelling",
            "Professional and efficient"
          ]
        },
        "specialization": {
          "type": "string",
          "description": "Area of expertise",
          "examples": ["Financial optimization", "Cultural insights", "Travel planning"]
        },
        "personality": {
          "type": "object",
          "properties": {
            "traits": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "analytical",
                  "creative",
                  "empathetic",
                  "logical",
                  "intuitive",
                  "systematic",
                  "adaptive",
                  "collaborative",
                  "independent",
                  "detail-oriented"
                ]
              }
            },
            "communication_style": {
              "type": "string",
              "enum": ["formal", "casual", "technical", "conversational", "authoritative"]
            },
            "decision_making": {
              "type": "string",
              "enum": [
                "data-driven",
                "intuitive",
                "collaborative",
                "authoritative",
                "consensus-based"
              ]
            },
            "learning_preference": {
              "type": "string",
              "enum": ["structured", "exploratory", "experimental", "theoretical", "practical"]
            }
          }
        },
        "background": {
          "type": "string",
          "description": "Professional background and experience"
        },
        "constraints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Limitations and boundaries for the agent"
        }
      }
    },
    "instructions": {
      "type": "string",
      "description": "Core instructions that guide agent behavior and logic",
      "minLength": 50
    },
    "capabilities": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "multimodal_intelligence",
          "arabic_coding",
          "data_analysis",
          "natural_language_processing",
          "quantum_computing",
          "financial_modeling",
          "cultural_analysis",
          "travel_planning",
          "user_interface_design",
          "api_integration",
          "database_management",
          "security_analysis",
          "performance_optimization",
          "testing_automation",
          "documentation_generation"
        ]
      },
      "description": "List of general capabilities the agent possesses"
    },
    "tools": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["id", "name", "description", "type"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[a-z0-9-_]+$"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["api", "function", "service", "library", "database"]
          },
          "parameters": {
            "type": "object",
            "description": "Tool-specific parameters and configuration"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["read", "write", "execute", "admin"]
            }
          }
        }
      },
      "description": "Specific tools and functions the agent can use"
    },
    "memory_access_policy": {
      "type": "object",
      "required": ["read", "write"],
      "properties": {
        "read": {
          "type": "object",
          "properties": {
            "entities": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "relationships": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "namespaces": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "restrictions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "write": {
          "type": "object",
          "properties": {
            "entities": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "relationships": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "namespaces": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "restrictions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "description": "Defines what memory resources the agent can access"
    },
    "dependencies": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["agent_id", "relationship_type"],
        "properties": {
          "agent_id": {
            "type": "string"
          },
          "relationship_type": {
            "type": "string",
            "enum": ["delegates_to", "collaborates_with", "reports_to", "manages", "depends_on"]
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "priority": {
            "type": "string",
            "enum": ["critical", "high", "medium", "low"]
          }
        }
      },
      "description": "Other agents this agent can delegate tasks to or collaborate with"
    },
    "performance_requirements": {
      "type": "object",
      "properties": {
        "response_time": {
          "type": "string",
          "description": "Maximum acceptable response time",
          "examples": ["< 200ms", "< 1s", "< 5s"]
        },
        "throughput": {
          "type": "string",
          "description": "Expected request handling capacity",
          "examples": ["100 requests/second", "1000 requests/minute"]
        },
        "accuracy": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Minimum acceptable accuracy level"
        },
        "availability": {
          "type": "string",
          "description": "Required uptime percentage",
          "examples": ["99.9%", "99.99%"]
        }
      }
    },
    "security_policy": {
      "type": "object",
      "properties": {
        "authentication": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["jwt", "api_key", "oauth2", "certificate"]
          }
        },
        "authorization": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["rbac", "abac", "acl"]
          }
        },
        "data_encryption": {
          "type": "boolean"
        },
        "audit_logging": {
          "type": "boolean"
        },
        "rate_limiting": {
          "type": "object",
          "properties": {
            "requests_per_minute": {
              "type": "number"
            },
            "burst_limit": {
              "type": "number"
            }
          }
        }
      }
    },
    "monitoring": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["response_time", "error_rate", "throughput", "accuracy", "user_satisfaction"]
          }
        },
        "alerts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "metric": {
                "type": "string"
              },
              "threshold": {
                "type": "number"
              },
              "severity": {
                "type": "string",
                "enum": ["critical", "warning", "info"]
              }
            }
          }
        },
        "health_checks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "deployment": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string",
          "enum": ["development", "staging", "production"]
        },
        "scaling": {
          "type": "object",
          "properties": {
            "min_instances": {
              "type": "number",
              "minimum": 1
            },
            "max_instances": {
              "type": "number"
            },
            "auto_scaling": {
              "type": "boolean"
            }
          }
        },
        "resources": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string"
            },
            "memory": {
              "type": "string"
            },
            "storage": {
              "type": "string"
            }
          }
        }
      }
    },
    "version_info": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "author": {
          "type": "string"
        },
        "changelog": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "changes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "additionalProperties": false
}
