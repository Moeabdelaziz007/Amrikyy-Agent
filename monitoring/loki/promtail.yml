server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs
  - job_name: container-logs
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s

    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'

    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            timestamp: time
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: output

  # Maya Travel Agent application logs
  - job_name: maya-travel-agent-app
    static_configs:
      - targets:
          - localhost
        labels:
          job: maya-travel-agent-app
          service: maya-travel-agent
          environment: production
          log_type: application

    file_sd_configs:
      - files: ['/etc/promtail/maya-app-logs.yml']

    pipeline_stages:
      - multiline:
          firstline: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
      - regex:
          expression: '^(?P<timestamp>[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]+Z)\s+(?P<level>DEBUG|INFO|WARN|ERROR|FATAL)\s+\[(?P<source>[^\]]+)\]\s+(?P<message>.*)$'
      - labels:
          timestamp: timestamp
          level:
          source:
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: message

  # Maya Travel Agent backend logs
  - job_name: maya-travel-agent-backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: maya-travel-agent-backend
          service: maya-travel-agent-backend
          environment: production
          log_type: backend

    file_sd_configs:
      - files: ['/etc/promtail/maya-backend-logs.yml']

    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message
            service: service
      - labels:
          level:
          service:
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: message

  # System logs (syslog)
  - job_name: system-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          service: system
          environment: production
          log_type: system

    journal:
      max_age: 12h
      path: /var/log/journal

    relabel_configs:
      - source_labels: ['__journal__systemd_unit']
        target_label: 'unit'
      - source_labels: ['__journal_syslog_identifier']
        target_label: 'syslog_identifier'

    pipeline_stages:
      - json:
          expressions:
            MESSAGE: message
            PRIORITY: priority
            SYSLOG_FACILITY: facility
            SYSLOG_IDENTIFIER: identifier
            SYSLOG_PID: pid
            _SYSTEMD_UNIT: systemd_unit
      - labels:
          priority:
          facility:
          identifier:
          systemd_unit:
      - timestamp:
          source: '__journal_timestamp'
          format: RFC3339Nano
      - output:
          source: message

  # Nginx/HTTP access logs
  - job_name: nginx-access-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-access
          service: nginx
          environment: production
          log_type: access

    file_sd_configs:
      - files: ['/etc/promtail/nginx-logs.yml']

    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>[0-9a-f.:]+) - - \[(?P<time_local>[^\]]+)\] "(?P<request>[^"]+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]+)"'
      - labels:
          remote_addr:
          request_method:
          status:
          body_bytes_sent:
      - timestamp:
          source: time_local
          format: '02/Jan/2006:15:04:05 -0700'

  # Error logs
  - job_name: error-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: error-logs
          service: application
          environment: production
          log_type: error

    file_sd_configs:
      - files: ['/etc/promtail/error-logs.yml']

    pipeline_stages:
      - json:
          expressions:
            timestamp: time
            level: level
            message: message
            stack_trace: stack
      - labels:
          level:
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: message

# Loki push API endpoint for manual log injection
# You can use this for custom log sources
push_config:
  server:
    http_listen_address: 0.0.0.0
    http_listen_port: 3500
    grpc_listen_address: 0.0.0.0
    grpc_listen_port: 3600

# Service discovery files (these will be mounted)
file_sd_configs:
  - files: ['/etc/promtail/*.yml']
    refresh_interval: 5m